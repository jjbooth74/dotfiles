# PREFIX {{
  unbind C-b
  set -g prefix "`"
  bind "`" send-prefix
# }}

# TERM {{
  set -g default-terminal "xterm-256color"
# }}

# POWERLINE {{
  # run-shell "powerline-daemon -q"
  # source "$POWERLINE/powerline/bindings/tmux/powerline.conf"
# }}

# SANE DEFAULTS {{
  # Use the mouse to select panes
  set -g mouse on

  # Start counting windows at 1
  set -g base-index 1
  set-window-option -g pane-base-index 1

  # don't rename windows automatically
  set-option -g allow-rename off
# }}

# KEYBINDINGS {{
  # vim-like copy mode
  set-window-option -g mode-keys vi

  # smart pane switching with awareness of vim splits
  bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
  bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
  bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
  bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
  bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

  bind -n C-Tab next-window
  bind -n C-S-Tab previous-window

  # Split windows with | and -
  bind | split-window -h
  bind - split-window -v
  unbind '"'
  unbind %

  # Resize panes
  bind h resize-pane -L 5
  bind j resize-pane -D 5
  bind k resize-pane -U 5
  bind l resize-pane -R 5

  # Window management
  bind t new-window

  # Clear screen + history
  bind-key / send-keys -R \; clear-history

  # Window management:
  # - S: Move current pane to selected window with horizontal split
  # - V: Move current pane to selected window with vertical split
  # - B: Move current pane to it's own window
  bind-key S choose-window "join-pane -v -t "%%""
  bind-key V choose-window "join-pane -h -t "%%""
  bind-key B break-pane
# }}

# COPYPASTE {{
  # Copy-paste integration
  set-option -g default-command "reattach-to-user-namespace -l zsh"

  # Use vim keybindings in copy mode
  setw -g mode-keys vi
  bind-key -T copy-mode-vi 'v' send -X begin-selection
  bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
  bind-key -T copy-mode-vi Enter send -X copy-selection-and-cancel

  # Bind ']' to use pbpaste
  bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
# }}

# STATUSLINE {{
  if-shell "test -f ~/.tmuxstatus.conf" "source ~/.tmuxstatus.conf"
# }}

# PLUGINS {{
  set -g @plugin 'tmux-plugins/tpm'
  set -g @plugin 'tmux-plugins/tmux-sensible'
  set -g @plugin 'christoomey/vim-tmux-navigator'
  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @plugin 'tmux-plugins/tmux-continuum'

  set -g @resurrect-capture-pane-contents 'on'
  set -g @continuum-restore 'on'
  set -g @resurrect-strategy-vim 'session'
  set -g @continuum-boot 'on'
  set -g @continuum-boot-options 'iterm'

  run '~/.tmux/plugins/tpm/tpm'
# }}

